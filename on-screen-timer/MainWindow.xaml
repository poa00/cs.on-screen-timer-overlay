<Window x:Class="on_screen_timer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:on_screen_timer"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" Height="{Binding Path=WindowHeight, FallbackValue=161, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="230"
        WindowStyle="None"
        ResizeMode="NoResize"
        Topmost="True"
        MouseDown="Window_MouseDown"
        MouseEnter="Window_MouseEnter"
        MouseLeave="Window_MouseLeave"
        Background="{x:Null}"
        Icon="timer.ico">
    <Window.Resources>
        <Style x:Key="TimerLabel" TargetType="Label">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="90"/>
            <Setter Property="FontSize" Value="60"/>
            <Setter Property="FontFamily" Value="din"/>
            <Setter Property="Foreground" Value="{Binding Path=TimerLabelColor}"/>
        </Style>

        <Style x:Key="TimerTextBox" TargetType="TextBox">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="FontSize" Value="42"/>
            <Setter Property="FontFamily" Value="din"/>
        </Style>
        
        <local:BoolToVisibilityConverter x:Key="boolConverter"/>
        <local:InverseBoolToVisibilityConverter x:Key="inverseBoolConverter"/>
        <local:BoolToGridRowHeightConverter x:Key="gridConverter"/>
        <local:IntToFormatedStringConverter x:Key="intConverter"/>

        <sys:Double x:Key="ControlButtonSize">55</sys:Double>

        <SolidColorBrush x:Key="GrayButtonFill">#FFB9B7B1</SolidColorBrush>
        <SolidColorBrush x:Key="GrayButtonStroke">#FFCDCDCD</SolidColorBrush>
        
        <SolidColorBrush x:Key="GreenButtonFill">#FF2FB01B</SolidColorBrush>
        <SolidColorBrush x:Key="GreenButtonStroke">#FF8BC382</SolidColorBrush>
        
        <SolidColorBrush x:Key="YelloButtonFill">#FFF79635</SolidColorBrush>
        <SolidColorBrush x:Key="YelloButtonStroke">#FFF0B978</SolidColorBrush>
    </Window.Resources>

    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem x:Name="ExitItem" Header="종료" Click="ExitItem_Click"/>
            <Separator />
            <MenuItem x:Name="InfoItem" Header="프로그램 정보" Click="InfoItem_Click"/>
            <MenuItem x:Name="DevItem" Header="이거 만든놈 누구냐" Click="DevItem_Click"/>

        </ContextMenu>
    </Window.ContextMenu>
    
    <Border BorderThickness="3" BorderBrush="#FFC9C9C9">
        <Grid Background="White">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*" />
                <RowDefinition Height="{Binding Path=ControlVisible, Converter={StaticResource gridConverter}, FallbackValue=1.5*}" />
            </Grid.RowDefinitions>

            <!--Timer Label Grid-->
            <Grid Grid.Row="0" Visibility="{Binding Path=IsTimerRunning, Converter={StaticResource boolConverter}}" Margin="0,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <!--Timer Label-->
                <Label Grid.Column="0" Margin="0,0,0,0" Style="{StaticResource TimerLabel}" Content="{Binding Path=CurrentLeftMinutes, Converter={StaticResource intConverter}, Mode=TwoWay, FallbackValue=00}" HorizontalAlignment="Right"/>
                <Label Grid.Column="1" Style="{StaticResource TimerLabel}" Content=":" Margin="0,-10,0,0"/>
                <Label Grid.Column="2" Margin="0,0,0,0" Style="{StaticResource TimerLabel}" Content="{Binding Path=CurrentLeftSeconds, Converter={StaticResource intConverter}, Mode=TwoWay, FallbackValue=00}" HorizontalAlignment="Left"/>

            </Grid>

            <!--Time Set Box Grid-->
            <Grid Grid.Row="0" Visibility="{Binding Path=IsTimerRunning, Converter={StaticResource inverseBoolConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBox x:Name="TimerMinuteTextBox" Style="{StaticResource TimerTextBox}" Text="{Binding Path=MinuteSet, UpdateSourceTrigger=PropertyChanged}"/>
                    <StackPanel Orientation="Vertical" Height="{Binding Path=ActualHeight, ElementName=TimerMinuteTextBox}">
                        <Button x:Name="MinutePlusButton" Width="25" Height="25" Content="▲" Click="MinutePlusButton_Click"/>
                        <Button x:Name="MinuteMinusButton" Width="25" Height="25" Content="▼" Click="MinuteMinusButton_Click"/>
                    </StackPanel>
                    <Label Content="분" Width="22" Height="{Binding Path=ActualHeight, ElementName=TimerMinuteTextBox}" VerticalAlignment="Center" VerticalContentAlignment="Bottom"/>
                </StackPanel>

                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Left">
                    <TextBox x:Name="TimerSecondTextBox" Style="{StaticResource TimerTextBox}" Text="{Binding Path=SecondSet, UpdateSourceTrigger=PropertyChanged}"/>
                    <StackPanel Orientation="Vertical" Height="{Binding Path=ActualHeight, ElementName=TimerSecondTextBox}">
                        <Button x:Name="SecondPlusButton" Width="25" Height="25" Content="▲" Click="SecondPlusButton_Click"/>
                        <Button x:Name="SecondMinusButton" Width="25" Height="25" Content="▼" Click="SecondMinusButton_Click"/>
                    </StackPanel>
                    <Label Content="초" Width="22" Height="{Binding Path=ActualHeight, ElementName=TimerMinuteTextBox}" VerticalAlignment="Center" VerticalContentAlignment="Bottom"/>
                </StackPanel>

            </Grid>

            <!--Control Button Grid-->
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Separator Grid.Row="0" Background="#FFC9C9C9" Margin="0"/>

                <!--Buttons-->
                <Grid Grid.Row="1" HorizontalAlignment="Center" Width="200" VerticalAlignment="Center">
                    <Button x:Name="CancelButton" Style="{StaticResource HoverOpacityEffect}" Width="{StaticResource ControlButtonSize}" Height="{StaticResource ControlButtonSize}" Content="취소" IsEnabled="{Binding Path=IsTimerRunning, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" Click="CancelButton_Click" Background="#FF595555">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Grid>
                                    <Ellipse Stroke="{StaticResource GrayButtonStroke}"
                         StrokeThickness="2" Fill="{StaticResource GrayButtonFill}">
                                    </Ellipse>
                                    <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <Button Panel.ZIndex="9" x:Name="StartButton" Style="{StaticResource HoverOpacityEffect}" Width="{StaticResource ControlButtonSize}" Height="{StaticResource ControlButtonSize}" Content="시작" Visibility="{Binding Path=IsTimerRunning, Converter={StaticResource inverseBoolConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="#FFB7F9A3" Click="StartButton_Click">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Grid>
                                    <Ellipse Stroke="{StaticResource GreenButtonStroke}"
                         StrokeThickness="2" Fill="{StaticResource GreenButtonFill}">
                                    </Ellipse>
                                    <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <Grid Visibility="{Binding Path=IsTimerRunning, Converter={StaticResource boolConverter},Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <Button x:Name="PauseButton" Style="{StaticResource HoverOpacityEffect}" Width="{StaticResource ControlButtonSize}" Height="{StaticResource ControlButtonSize}" Content="일시정지" Visibility="{Binding Path=IsTimerPaused, Converter={StaticResource inverseBoolConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="#FFFFEED2" Click="PauseButton_Click">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <Ellipse Stroke="{StaticResource YelloButtonStroke}"
                         StrokeThickness="2" Fill="{StaticResource YelloButtonFill}">
                                        </Ellipse>
                                        <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Button x:Name="ResumeButton" Style="{StaticResource HoverOpacityEffect}" Width="{StaticResource ControlButtonSize}" Height="{StaticResource ControlButtonSize}" Content="재개" Visibility="{Binding Path=IsTimerPaused, Converter={StaticResource boolConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="#FFB7F9A3" Click="ResumeButton_Click">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <Ellipse Stroke="{StaticResource GreenButtonStroke}"
                         StrokeThickness="2" Fill="{StaticResource GreenButtonFill}">
                                        </Ellipse>
                                        <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>

                </Grid>
            </Grid>
        </Grid>
    </Border>

    
</Window>
